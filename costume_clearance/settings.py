"""
Django settings for costume_clearance project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from datetime import timedelta
import os
from pathlib import Path

from corsheaders.defaults import default_headers

CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_HEADERS = list(default_headers) + [
    'Language',  # Add your custom header
]

def cors_allow_origin_all_allow_credentials(origin, request=None):
    return {
        'access_control_allow_origin': origin,
        'access_control_allow_credentials': 'true',
    }

CORS_ALLOW_ORIGIN_CALLBACK = cors_allow_origin_all_allow_credentials


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


LOCALE_PATHS = [ BASE_DIR / "locale" ]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--kip)vh(nwfg03c53ea+ht@k*w_g$0pm3b5zj!6z2nxh4b)m_0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
	'across-mena.com',
	'localhost',
	'127.0.0.1',
	]
	#Without port add the value
CSRF_TRUSTED_ORIGINS = [
    'https://across-mena.com',
    'https://www.across-mena.com',
    'http://across-mena.com',
    'http://www.across-mena.com',
    'http://127.0.0.1:8000',  # Add the development URL
    'http://localhost:3000',  # Add your frontend development URL
]

DATABASES = {
     'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'nawarcustom',
        'HOST': '127.0.0.1',
        'USER': 'root',
        'PORT': '3306',
        'PASSWORD': 'password'
    }
}


# Application definition

INSTALLED_APPS = [
    'core',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_filters',
    'rest_framework',
    'rest_framework.authtoken',
    'djoser',
    "corsheaders",
    'Fee_calculator',
    'tree_view',
    "push_notifications",
    'Shipping',
    'tracking',
    'nested_admin',
    'Sea_Shipping',
    'price',
	'django_extensions',
    'tariffa',
    'import_export',
    'tariff',
    'invoice',


]

LANGUAGES = [
    ('en', 'English'),
    ('ar', 'Arabic'),
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',  # This will check for the language from the URL

]
CORS_ALLOWED_HEADERS = [
    'Content-Type',
    'Authorization',
    'Language',

]


CORS_ORIGIN_ALLOW_ALL = True




ROOT_URLCONF = 'costume_clearance.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'costume_clearance.wsgi.application'



# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'  # URL to access static files
STATICFILES_DIRS = [
    BASE_DIR / "static",  # Where your app-specific static files are
]
STATIC_ROOT = BASE_DIR / "staticfiles"  # Where `collectstatic` will place them

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.mailtrap.io'
# EMAIL_HOST_USER = '893a968cc38673'      # ← paste from Mailtrap
# EMAIL_HOST_PASSWORD = '7354cf6af807db'  # ← paste from Mailtrap
# EMAIL_PORT = 587  # Or use 587 or 465 if preferred
# EMAIL_USE_TLS = True  # TLS is usually best
# EMAIL_USE_SSL = False  # Use either TLS or SSL, not both


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
LOGGING = {
    'version':1,
    'disable_existing_loggers': False,
    "handlers": {
        "console": {"class": "logging.StreamHandler"},
        'file':{
            'class':'logging.FileHandler',
            'filename':'general.log'
        }
    },
    'loggers':{
        "django": {
            "handlers": ["console"],
            "level": "INFO",
        },
    },
    'formatters':{
        'verbose':{
            'format':'{asctime} ({levelname}) - {name} -{message}',
            'style':'{'
        }
    }

}

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'core.User'

SIMPLE_JWT = {
   'AUTH_HEADER_TYPES': ('JWT',),
    "ACCESS_TOKEN_LIFETIME": timedelta(days=365),
}

REST_FRAMEWORK = {
    'COERCE_DECIMAL_TO_STRING': False,
        # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE':10,
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.IsAuthenticated',
    # ]
}

DJOSER = {
    'USER_UNACTIVE_AFTER_REGISTRATION':True,
    'PERMISSIONS': {
        'user_create': ['rest_framework.permissions.AllowAny'],
    },
    'SERIALIZERS':{
        'user_create': 'core.serializers.UserRegistrationSerializer',
        'current_user': 'core.serializers.UserSerializer'
    }
}


PUSH_NOTIFICATIONS_SETTINGS = {
        "FCM_API_KEY": "AAAA9zpCJDo:APA91bGondhYyXTJuaQbKtHrSh9j-XpkC8cuRq9KDihG7Kyap2Av1n3GZNUKOGDLOey0GrVL0hysv6s-h4vpSYL2CIOaNfOtENle92MlnxBGdnehfnw96HIAsBIhSyStmus7G2qcyPeP",
        "GCM_API_KEY": "AIzaSyBWrMXW_oAAQd-LL0XfIwWsPI8AMlrugdw",
        # "APNS_CERTIFICATE": "/path/to/your/certificate.pem",
        # "APNS_AUTH_KEY_PATH":os.path.join(BASE_DIR,"costume_clearance/AuthKey_ZQAVPV3APJ.p8"),
        # "APNS_AUTH_KEY_ID":"ZQAVPV3APJ",
        # "APNS_TEAM_ID":"7PP9S3U3LT"
}
